<!DOCTYPE html>
<html lang="sk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Scraper</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500&display=swap');
        :root {
            --bg-primary: #1a1a1a;
            --bg-secondary: #2d2d2d;
            --text-primary: #ffffff;
            --text-secondary: #b3b3b3;
            --accent: #4CAF50;
            --accent-hover: #45a049;
            --border: #404040;
            --input-bg: #333333;
            --card-bg: #2d2d2d;
            --error-bg: #421c1c;
            --error-text: #ff6b6b;
            --success-bg: #1c422d;
            --success-text: #4caf50;
        }

        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: var(--bg-primary);
            min-height: 100vh;
            position: relative;
            padding-bottom: 100px;
            color: var(--text-primary);
        }

        .container {
            background: var(--bg-secondary);
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            margin-bottom: 40px;
            border: 1px solid var(--border);
        }

        h1, h2, h3 {
            text-align: center;
            color: var(--text-primary);
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-secondary);
            font-weight: bold;
        }

        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 10px;
            border: 2px solid var(--border);
            border-radius: 4px;
            font-size: 16px;
            transition: all 0.3s;
            background-color: var(--input-bg);
            color: var(--text-primary);
        }

        input[type="text"]:focus,
        input[type="number"]:focus {
            border-color: var(--accent);
            outline: none;
            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
        }

        button {
            background-color: var(--accent);
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            display: block;
            margin: 20px auto;
            transition: all 0.3s;
        }

        button:hover {
            background-color: var(--accent-hover);
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .results {
            margin-top: 30px;
        }

        .job-card {
            background: var(--card-bg);
            border: 1px solid var(--border);
            padding: 20px;
            margin-bottom: 15px;
            border-radius: 8px;
            transition: all 0.3s;
        }

        .job-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.3);
            border-color: var(--accent);
        }

        .error {
            color: var(--error-text);
            padding: 15px;
            background-color: var(--error-bg);
            border-radius: 4px;
            margin-bottom: 20px;
            text-align: center;
            border: 1px solid var(--error-text);
        }

        .success {
            color: var(--success-text);
            padding: 15px;
            background-color: var(--success-bg);
            border-radius: 4px;
            margin-bottom: 20px;
            text-align: center;
            border: 1px solid var(--success-text);
        }

        .download-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }

        .download-button {
            display: flex;
            align-items: center;
            padding: 12px 24px;
            border-radius: 8px;
            color: var(--text-primary);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            border: 1px solid var(--border);
        }

        .download-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .download-button.csv {
            background-color: #2196F3;
        }

        .download-button.json {
            background-color: #4CAF50;
        }

        .download-icon {
            width: 24px;
            height: 24px;
            margin-right: 8px;
            fill: currentColor;
        }

        .watermark {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            opacity: 0.1;
            pointer-events: none;
            z-index: -1;
        }

        .watermark img {
            width: 150px;
            height: auto;
            filter: brightness(2);
        }

        .terminal {
            background: var(--bg-primary);
            border: 1px solid var(--border);
            border-radius: 8px;
            padding: 15px;
            margin-top: 20px;
            font-family: 'Fira Code', monospace;
            height: 500px;
            overflow-y: auto;
            position: relative;
            color: #4CAF50;
            line-height: 1.4;
        }

        .terminal-header {
            position: sticky;
            top: 0;
            background: var(--bg-secondary);
            padding: 5px 10px;
            border-bottom: 1px solid var(--border);
            margin: -15px -15px 10px -15px;
            border-radius: 8px 8px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .terminal-title {
            color: var(--text-secondary);
            font-size: 0.9em;
        }

        .terminal-controls {
            display: flex;
            gap: 5px;
        }

        .terminal-button {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: none;
            padding: 0;
        }

        .terminal-close { background: #ff5f56; }
        .terminal-minimize { background: #ffbd2e; }
        .terminal-maximize { background: #27c93f; }

        .terminal-content {
            color: var(--text-primary);
            font-size: 14px;
            line-height: 1.5;
            white-space: pre-wrap;
            margin: 0;
            padding: 0;
        }

        .terminal-line {
            margin: 5px 0;
            display: flex;
        }

        .terminal-prompt {
            color: var(--accent);
            margin-right: 10px;
        }

        .blink {
            animation: blink 1s step-end infinite;
        }

        @keyframes blink {
            50% { opacity: 0; }
        }

        .watermark {
            position: fixed;
            bottom: 0;
            right: 0;
            opacity: 0.8;
            z-index: 1000;
            margin: 0;
            padding: 0;
        }

        .watermark img {
            width: 80px;
            height: auto;
            transition: all 0.3s ease;
            display: block;
            margin: 0;
        }

        .watermark img:hover {
            opacity: 1;
            transform: scale(1.05);
        }

        .download-panel {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: var(--bg-secondary);
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0,0,0,0.3);
            border: 1px solid var(--accent);
            z-index: 1000;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translate(-50%, -60%); }
            to { opacity: 1; transform: translate(-50%, -50%); }
        }

        .log-info { color: var(--text-primary); }
        .log-warn { color: #ffbd2e; }
        .log-error { color: #ff5f56; }
    </style>
</head>
<body>
    <h1>Job Scraper</h1>
    
    <div class="container">
        <form action="/scrape" method="POST">
            <div class="form-group">
                <label for="startUrl">Začiatočná URL:</label>
                <input type="text" id="startUrl" name="startUrl" value="https://www.profesia.sk/praca/" required>
            </div>
            
            <div class="form-group">
                <label for="maxPages">Maximálny počet stránok:</label>
                <input type="number" id="maxPages" name="maxPages" value="5" min="1" required>
            </div>
            
            <div class="form-group">
                <label for="concurrency">Súbežnosť:</label>
                <input type="number" id="concurrency" name="concurrency" value="1" min="1" required>
            </div>
            
            <button type="submit">Spustiť scraping</button>
        </form>
    </div>

    <div class="watermark">
        <img src="https://lh3.googleusercontent.com/a/ACg8ocKktHJlvkQK85EHrR8Sm1zUzwG0ZeF_AGPdBvFW9Pd0CPYITSjn=s288-c-no" alt="Logo">
    </div>

    <div class="terminal">
        <div class="terminal-header">
            <div class="terminal-title">job-scraper output</div>
            <div class="terminal-controls">
                <button class="terminal-button terminal-close"></button>
                <button class="terminal-button terminal-minimize"></button>
                <button class="terminal-button terminal-maximize"></button>
            </div>
        </div>
        <div id="terminal-content" class="terminal-content"></div>
    </div>

    <script>
        const ws = new WebSocket('ws://' + window.location.host);
        const terminal = document.getElementById('terminal-content');

        ws.onopen = () => {
            const line = document.createElement('div');
            line.className = 'terminal-line';
            line.innerHTML = '<span class="terminal-prompt" style="color: #27c93f;">✓</span><span>Connected to server</span>';
            terminal.appendChild(line);
        };

        ws.onmessage = (event) => {
            try {
                const data = JSON.parse(event.data);
                if (data.type === 'log') {
                    const line = document.createElement('div');
                    line.className = 'terminal-line';
                    
                    if (!terminal.querySelector('.prompt-line')) {
                        const promptLine = document.createElement('div');
                        promptLine.className = 'terminal-line prompt-line';
                        promptLine.innerHTML = '<span class="terminal-prompt" style="color: #4CAF50;">itssafer@itssafer:~/VSCode/job-scraper-itssafer<br>$ npm run start:web</span>';
                        terminal.appendChild(promptLine);
                        
                        const npmLine = document.createElement('div');
                        npmLine.className = 'terminal-line';
                        npmLine.innerHTML = '<span class="log-info">> job-scraper-itssafer@1.0.0 start:web<br>> node src/server.js</span>';
                        terminal.appendChild(npmLine);
                    }
                    
                    const output = document.createElement('span');
                    output.className = 'log-' + (data.level || 'info');
                    output.textContent = data.message;
                    
                    line.appendChild(output);
                    terminal.appendChild(line);
                    
                    // Auto-scroll to bottom
                    terminal.scrollTop = terminal.scrollHeight;

                    // Ak správa obsahuje "finished", zobrazíme download panel
                    if (data.message.includes('Crawler finished')) {
                        document.getElementById('downloadPanel').style.display = 'block';
                    }
                }
            } catch (error) {
                console.error('Error parsing WebSocket message:', error);
            }
        };

        ws.onerror = (error) => {
            console.error('WebSocket error:', error);
        };

        ws.onclose = () => {
            const line = document.createElement('div');
            line.className = 'terminal-line';
            line.innerHTML = '<span class="terminal-prompt" style="color: #ff5f56;">!</span><span>Connection closed</span>';
            terminal.appendChild(line);
        };
    </script>

    <% if (typeof error !== 'undefined') { %>
        <div class="error">
            <%= error %>
        </div>
    <% } %>

    <% if (typeof success !== 'undefined') { %>
        <div class="success">
            <%= success %>
        </div>
    <% } %>

    <% if (typeof jobs !== 'undefined' && jobs.length > 0) { %>
        <div class="container results">
            <h2>Nájdené pracovné ponuky (<%= jobs.length %>)</h2>
            
            <% if (typeof hasFiles !== 'undefined' && hasFiles) { %>
                <div class="download-buttons">
                    <a href="/download/csv" class="download-button csv">
                        <svg class="download-icon" viewBox="0 0 24 24">
                            <path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/>
                        </svg>
                        Stiahnuť CSV
                    </a>
                    <a href="/download/json" class="download-button json">
                        <svg class="download-icon" viewBox="0 0 24 24">
                            <path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/>
                        </svg>
                        Stiahnuť JSON
                    </a>
                </div>
            <% } %>
            
            <% jobs.forEach(function(job) { %>
                <div class="job-card">
                    <h3><%= job.jobTitle %></h3>
                    <p><strong>Spoločnosť:</strong> <%= job.companyName %></p>
                    <p><strong>Lokalita:</strong> <%= job.location %></p>
                    <% if (job.salary) { %>
                        <p><strong>Plat:</strong> 
                            <%= job.salary.min %><%= job.salary.max ? ' - ' + job.salary.max : '' %> 
                            <%= job.salary.currency %> / <%= job.salary.period %>
                        </p>
                    <% } %>
                    <p><strong>Typ:</strong> <%= job.employmentType %></p>
                </div>
            <% }); %>
        </div>
    <% } %>
</body>
</html>